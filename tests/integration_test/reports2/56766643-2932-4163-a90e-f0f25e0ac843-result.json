{"name": "test_get_single_booking_after_delete_get", "status": "failed", "statusDetails": {"message": "AssertionError: Request failed. Expected: 201, Actual:403", "trace": "create_token = '9bf13cc3dcc0fe6', create_booking_post = 13\n\n    @pytest.fixture()\n    def delete_booking_delete(create_token, create_booking_post):\n        token = create_token\n        booking_id = create_booking_post\n        url = update_delete_get_single_booking(booking_id)\n        cookie = \"token=\" + str(token)\n        headers = {\"Content-Type\": \"application/json\",\n                   \"Cookie\": cookie}\n    \n        # Send DELETE request\n        delete_response = requests.delete(url=url, headers=headers)\n        print(delete_response.text)\n    \n        # Assertions\n>       assert delete_response.status_code == 201, \"Request failed. Expected: 201, Actual:\" + str(\n            delete_response.status_code)\nE       AssertionError: Request failed. Expected: 201, Actual:403\n\n..\\..\\src\\resources\\conf.py:173: AssertionError"}, "attachments": [{"name": "stdout", "source": "822d5e86-27e1-48ae-99cc-158a297d0058-attachment.txt", "type": "text/plain"}], "start": 1702459303750, "stop": 1702459303750, "uuid": "ea659c31-eaf2-44d1-8062-8a8bc7e6e390", "historyId": "d68d60204cc2679088da5acf4904c954", "testCaseId": "d68d60204cc2679088da5acf4904c954", "fullName": "test_full_crud_single#test_get_single_booking_after_delete_get", "labels": [{"name": "suite", "value": "test_full_crud_single"}, {"name": "host", "value": "DESKTOP-E39KRHO"}, {"name": "thread", "value": "3864-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_full_crud_single"}]}